<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="{DynamicResource 表行颜色}"/>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{DynamicResource 表行颜色1}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource 线性渐变颜色}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource 窗口背景色}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGrid}"
           x:Key="dataGridStyleLog">
        <Setter Property="Foreground" Value="{DynamicResource 字体颜色标准}"/>
        <Setter Property="Background" Value="{DynamicResource 窗口背景色}"/>
        <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource 表行颜色1}"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource KeyDataGridControlTemplate}"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
									 
									Background="{TemplateBinding Background}" 
									SnapsToDevicePixels="True">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
										Content="{TemplateBinding Content}"
										ToolTip="{Binding Message}"
										VerticalAlignment="Center"
										ContentStringFormat="{TemplateBinding ContentStringFormat}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
                            <Setter Property="Background" 
                                    Value="{DynamicResource 线性渐变颜色}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource 线性渐变颜色}"/>

                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Level}" Value="Warning">
                            <Setter Property="Foreground" Value="DarkGoldenrod"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="Error">
                            <Setter  Property="Foreground" Value="Red"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tip}" Value="Error">
                            <Setter  Property="Foreground" Value="Green"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGrid}"
           x:Key="dataGridStyleDetailResult">
        <Setter Property="Foreground" Value="{DynamicResource 字体颜色标准}"/>
        <Setter Property="Background" Value="{DynamicResource 窗口背景色}"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource 表行颜色1}"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
        <Setter Property="Template" Value="{DynamicResource KeyDataGridControlTemplate}"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
									 
									Background="{TemplateBinding Background}" 
									SnapsToDevicePixels="True">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
										Content="{TemplateBinding Content}"
										ToolTip="{Binding Message}"
										VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
										ContentStringFormat="{TemplateBinding ContentStringFormat}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
                            <Setter Property="Background" Value="{DynamicResource 线性渐变颜色}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource 线性渐变颜色}"/>

                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding 结论}" Value="合格">
                            <Setter Property="Foreground" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding 结论}" Value="不合格">
                            <Setter  Property="Foreground" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridRowHeader">
                                <Border Width="30"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource 边框颜色}"
                                        Background="{DynamicResource 控件有效}">
                                    <ContentPresenter Content="{Binding Index}"
                                                      Margin="2"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGrid}" 
           x:Key="dataGridStyleGeneral">
        <Setter Property="Foreground" Value="{DynamicResource 字体颜色标准}"/>
        <Setter Property="Background" Value="{DynamicResource 窗口背景色}"/>
        <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource 表行颜色1}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource KeyDataGridControlTemplate}"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
									 
									Background="{TemplateBinding Background}" 
									SnapsToDevicePixels="True">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
										Content="{TemplateBinding Content}"
										ToolTip="{Binding Message}"
										VerticalAlignment="Center"
										ContentStringFormat="{TemplateBinding ContentStringFormat}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
                            <Setter Property="Background" Value="{DynamicResource 线性渐变颜色}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource 
                          {x:Static SystemColors.ControlBrushKey}}"/>

                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGrid}" 
           x:Key="dataGridStyleError">
        <Setter Property="Foreground" Value="{DynamicResource 字体颜色标准}"/>
        <Setter Property="Background" Value="{DynamicResource 窗口背景色}"/>
        <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
        <Setter Property="SelectionUnit" Value="Cell"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource 表行颜色1}"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource KeyDataGridControlTemplate}"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Foreground" Value="Green"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
									 
									Background="{TemplateBinding Background}" 
									SnapsToDevicePixels="True">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
										Content="{TemplateBinding Content}"
										ToolTip="{Binding Message}"
										VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
										ContentStringFormat="{TemplateBinding ContentStringFormat}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="{DynamicResource 表行颜色}"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                    <Setter Property="ValidationErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock Foreground="Red"
                                           Margin="2,0,0,0" Text="!" 
                                           VerticalAlignment="Center"><Run Text="!"/></TextBlock>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StyleWrapText"
        TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>
    <Style x:Key="StyleEditCheckBox" TargetType="CheckBox">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment"  Value="Center"/>
    </Style>
    <Style x:Key="StyleEditTextBox" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment"  Value="Stretch"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>
    <Style TargetType="{x:Type DataGrid}" 
           x:Key="dataGridStyleMeterDetailResult">
        <Setter Property="Foreground" Value="{DynamicResource 字体颜色标准}"/>
        <Setter Property="Background" Value="{DynamicResource 窗口背景色}"/>
        <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource 表行颜色1}"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource KeyDataGridControlTemplate}"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
									 
									Background="{TemplateBinding Background}" 
									SnapsToDevicePixels="True">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
										Content="{TemplateBinding Content}"
										ToolTip="{Binding Message}"
										VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
										ContentStringFormat="{TemplateBinding ContentStringFormat}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
                            <Setter Property="Background" Value="{DynamicResource 线性渐变颜色}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource 线性渐变颜色}"/>

                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding 结论}" Value="合格">
                            <Setter Property="Foreground" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding 结论}" Value="不合格">
                            <Setter  Property="Foreground" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridRowHeader">
                                <Border Width="200"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource 边框颜色}"
                                        Background="{DynamicResource 控件有效}">
                                    <ContentPresenter Content="{Binding 项目名}"
                                                      HorizontalAlignment="Left"
                                                      Margin="2"
                                                      VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Width" Value="200"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource 字体颜色标准}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource 边框颜色}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{DynamicResource 控件有效}"
                                                     BorderThickness="{TemplateBinding BorderThickness}" 
                                                     Padding="{TemplateBinding Padding}" >
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Margin="2,0"
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              HorizontalAlignment="Center" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Width" Value="8"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="SizeWE"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Width" Value="8"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="SizeWE"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="KeyDataGridControlTemplate"
                     TargetType="{x:Type DataGrid}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                <ScrollViewer.Template>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="rowColumnHeader"
                                               Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Button Command="ApplicationCommands.SelectAll" 
                                    x:Name="buttonSelectAll"
                                    Focusable="False" 
                                    Visibility="Collapsed"
                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                            <DataGridColumnHeadersPresenter
                                x:Name="PART_ColumnHeadersPresenter" Grid.Column="1"
                                Visibility="Collapsed"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                            <Grid Grid.Column="1" Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Value="Column">
                                <DataTrigger.Binding>
                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                        <Binding.ConverterParameter>
                                            <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </DataTrigger.Binding>
                                <Setter TargetName="PART_ColumnHeadersPresenter"
                                        Property="Visibility"
                                        Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Value="All">
                                <DataTrigger.Binding>
                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                        <Binding.ConverterParameter>
                                            <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </DataTrigger.Binding>
                                <Setter TargetName="PART_ColumnHeadersPresenter"
                                        Property="Visibility"
                                        Value="Visible"/>
                                <Setter TargetName="buttonSelectAll" 
                                        Property="Visibility"
                                        Value="Visible"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ScrollViewer.Template>
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
        </Border>
    </ControlTemplate>
</ResourceDictionary>