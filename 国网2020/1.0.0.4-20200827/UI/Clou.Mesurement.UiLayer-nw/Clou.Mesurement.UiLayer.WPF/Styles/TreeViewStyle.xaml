<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:System="clr-namespace:System;assembly=mscorlib">
    <Style TargetType="TreeView">
        <Setter Property="Background" 
                Value="{DynamicResource 窗口背景色}"/>
        <Setter Property="AlternationCount" Value="2"/>
    </Style>
    <!--<Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" 
			Value="{DynamicResource 表行颜色}"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background"
					Value="{DynamicResource 表行颜色1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    <Style x:Key="SimpleTreeViewItemToggleButton"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid Width="15" Height="13"
                          Background="Transparent">
						<Path Visibility="Collapsed" 
                              HorizontalAlignment="Left" 
                              Margin="1,1,1,1" 
                              x:Name="IsExpandedPath" 
                              VerticalAlignment="Center" 
                              Fill="{DynamicResource GlyphBrush}" 
                              Data="M 0 4 L 8 4 L 4 8 Z"/>
						<Path HorizontalAlignment="Left"
                              Margin="1,1,1,1" x:Name="ExpandPath" 
                              VerticalAlignment="Center"
                              Fill="{DynamicResource GlyphBrush}" 
                              Data="M 4 0 L 8 4 L 4 8 Z"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
                                 Value="True">
							<Setter Property="Visibility"
                                    Value="Visible" TargetName="IsExpandedPath"/>
							<Setter Property="Visibility"
                                    Value="Collapsed" TargetName="ExpandPath"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!--Simple TreeViewItem - TreeViewItem 模板带有一个显示 Item 的标题和一个展开可显示子项的 ItemsHost 控件的 Body-->
	<Style TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding"
                Value="1,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander"
                                      Style="{DynamicResource SimpleTreeViewItemToggleButton}"
                                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                      ClickMode="Press"/>
						<Border Grid.Column="1" 
                                Grid.ColumnSpan="2"
                                x:Name="Selection_Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" 
                                              ContentSource="Header"/>
						</Border>
						<ItemsPresenter Grid.Column="1" 
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1" 
                                        x:Name="ItemsHost"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" 
                                    Value="Collapsed" TargetName="ItemsHost"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility"
                                    Value="Hidden" 
                                    TargetName="Expander"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    TargetName="Selection_Border"/>
							<Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                    TargetName="Selection_Border"/>
							<Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
        <Setter Property="Background" 
			Value="{DynamicResource 表行颜色}"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background"
					Value="{DynamicResource 表行颜色1}"/>
            </Trigger>
        </Style.Triggers>
	</Style>
</ResourceDictionary>