<dc:RibbonWindow xmlns:Light="clr-namespace:Mesurement.UiLayer.WPF.Controls.Light"
    xmlns:View="clr-namespace:Mesurement.UiLayer.WPF.View"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 WindowStartupLocation="CenterScreen"
                 Foreground="{DynamicResource 字体颜色标准}"
    xmlns:LocalControl="clr-namespace:Mesurement.UiLayer.WPF.Controls"
    xmlns:dc="clr-namespace:DevComponents.WpfRibbon;assembly=DevComponents.WpfRibbon"
    xmlns:dd="clr-namespace:DevComponents.WpfDock;assembly=DevComponents.WpfDock"
    xmlns:behavior="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:general="clr-namespace:Mesurement.UiLayer.WPF.UiGeneral"
    xmlns:Converter="clr-namespace:Mesurement.UiLayer.WPF.Converter"
    x:Class="Mesurement.UiLayer.WPF.MainWindow"
    Title="国网2020规范电能表检测软件"
                 MinHeight="700"
                 MinWidth="1200"
                 Height="700"
                 Width="1200"
    Icon="images/clou.ico"
                 WindowState="Maximized"
    TextOptions.TextFormattingMode="Display" 
                 UseLayoutRounding="True"
                 Background="{DynamicResource 窗口背景色}"
    ResizeMode="CanResizeWithGrip">
    <dc:RibbonWindow.Resources>
        <Converter:NotBoolConverter x:Key="NotBoolConverter"/>
    </dc:RibbonWindow.Resources>
    <Grid HorizontalAlignment="Stretch"
		VerticalAlignment="Stretch" >
        <DockPanel LastChildFill="True">
            <!--<View:MainMenu DockPanel.Dock="Top"/>-->
            <LocalControl:UserMenu DockPanel.Dock="Top"/>
            <StatusBar 
                Background="{DynamicResource 窗口背景深色}"
                Foreground="{DynamicResource 字体颜色标准}"
				DockPanel.Dock="Bottom">
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding EquipmentType}"
                                   VerticalAlignment="Center"
                                   Name="textEquipmentType"/>
                        <TextBlock Margin="3,0" Text="{Binding ID}"
                                   VerticalAlignment="Center"
                                   Name="textEquipmentNo"/>
                        <Image Name="imageEqupmentStatus"
                               Height="18" >
                            <Image.Resources>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="images/unconnect.png"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="false">
                                            <Setter Property="Source" Value="images/disconnect.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="true">
                                            <Setter Property="Source" Value="images/connect.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Resources>
                        </Image>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem
					Margin="15,0">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="停止检定"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecking}" Value="true">
                                        <Setter Property="Text" Value="正在检定"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock ToolTip="检定状态"
							x:Name="textBlockCheckStatus"/>
                        <Light:ColorLight 
                            x:Name="lightCheckStatus"
                            Shine="{Binding IsChecking}"
                            Flash="{Binding NewArrived, Mode=TwoWay}"
                            LightColor="Green"
							Margin="2,0"
							VerticalAlignment="Center"
							Width="16"
							Height="16"/>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding CheckMode}"
							x:Name="textBlockTestMode"
							ToolTip="检定模式"
							Margin="3,0"/>
                        <TextBlock x:Name="textBlockSchemaName"
							Text="{Binding SelectedSchema.SCHEMA_NAME}"
							Margin="3,0"
							MaxWidth="160"
							ToolTip="检定方案名称"/>
                        <TextBlock Text="{Binding StringCheckIndex}"
							x:Name="textBlockCheckIndex"
							ToolTip="当前步骤"
							Margin="3,0"/>
                        <TextBlock Text="{Binding CheckingName}"
							x:Name="textBlockCheckName"/>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal"
                                Name="stackPanelChecker">
                        <StackPanel Name="stackPanelTime"
                                         Orientation="Horizontal">
                            <TextBlock Text="总进度" 
                                       VerticalAlignment="Center"
                                       Margin="3"/>
                            <ProgressBar Width="150" Height="12"
                                         ToolTip="{Binding TextTooltip}"
                                     Maximum="{Binding TotalTime,Mode=OneWay}"
                                     Value="{Binding PastTime,Mode=OneWay}"
                                 Margin="3,0"/>
                                        <TextBlock Text="{Binding StringLeftTime}"
                                                   ToolTip="剩余时间"
                                                   VerticalAlignment="Center"
                                                   Margin="3,0,15,0"/>
                            <TextBlock Text="分项进度"
                                     VerticalAlignment="Center"
                                       Margin="15,3,3,3"/>
                            <ProgressBar Width="150" Height="12"
                                         ToolTip="{Binding TimeCollection.SelectedItem.TextTooltip}"
                                     Maximum="{Binding TimeCollection.SelectedItem.TotalTime,Mode=OneWay}"
                                     Value="{Binding TimeCollection.SelectedItem.PastTime,Mode=OneWay}"
                                 Margin="3,0"/>
                                        <TextBlock Text="{Binding TimeCollection.SelectedItem.StringPastTime}"
                                                   VerticalAlignment="Center"
                                                   Margin="3,0,15,0"/>
                        </StackPanel>
                        <TextBlock Text="{DynamicResource 检验员}"
                                   VerticalAlignment="Center"
                               Margin="15,0,0,0"/>
                        <TextBlock Margin="5,0"
                                   VerticalAlignment="Center"
                                   Text="{Binding TestPerson}"/>
                        <TextBlock Text="{DynamicResource 核验员}"
                                   VerticalAlignment="Center"
                               Margin="15,0,0,0"/>
                        <TextBlock Margin="5,0,10,0"
                                   VerticalAlignment="Center"
                                   Text="{Binding AuditPerson}"/>
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
            <dd:DockSite  x:Name="AppDock"
				Margin="0" 
                 Background="{DynamicResource 窗口背景色}"/>
        </DockPanel>
    </Grid>
</dc:RibbonWindow>
