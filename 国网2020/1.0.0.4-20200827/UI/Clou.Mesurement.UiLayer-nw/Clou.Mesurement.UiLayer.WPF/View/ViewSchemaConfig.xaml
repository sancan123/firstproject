<basemodel:DockControlDisposable xmlns:Error="clr-namespace:Mesurement.UiLayer.WPF.Schema.Error"  
    xmlns:LocalControls="clr-namespace:Mesurement.UiLayer.WPF.Controls" 
    xmlns:Schema="clr-namespace:Mesurement.UiLayer.WPF.Schema"  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:basemodel="clr-namespace:Mesurement.UiLayer.WPF.Model"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:schemaViewModel="clr-namespace:Mesurement.UiLayer.ViewModel.Schema;assembly=Mesurement.UiLayer.ViewModel"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             x:Class="Mesurement.UiLayer.WPF.View.ViewSchemaConfig"
            xmlns:local="clr-namespace:Mesurement.UiLayer.WPF.Schema"
    xmlns:errorControl="clr-namespace:Mesurement.UiLayer.WPF.Schema.Error"
             mc:Ignorable="d" 
             FontSize="14"
                                 Foreground="{DynamicResource 字体颜色标准}"
             d:DesignHeight="700" d:DesignWidth="1200">
    <basemodel:DockControlDisposable.Resources>
        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              VerticalAlignment ="Center"
                                              Margin="3,1"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" 
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" 
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource {ComponentResourceKey ResourceId=FocusBorderBrushKey, TypeInTargetAssembly={x:Type DataGrid}}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <schemaViewModel:SchemaViewModel x:Key="SchemaViewModel"/>
        <schemaViewModel:SchemaOperationViewModel x:Key="SchemasViewModel"/>
        <GridViewColumnCollection x:Key="ColumnsSchemaConfig">
            <GridViewColumn  Header="检定点名称"
                             Width="500">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" 
                      Margin="{Binding Level,Converter={StaticResource LevelToIndentConverter}}">
                            <ToggleButton x:Name="Expander" 
                      Style="{StaticResource ExpandCollapseToggleStyle}" 
                      IsChecked="{Binding Path=IsExpanded,
                                 RelativeSource={RelativeSource 
                                                 AncestorType=
                                                  {x:Type TreeViewItem}}}"
												  
             HorizontalAlignment="Center"
             VerticalAlignment="Center"
                      ClickMode="Press"/>
                            <TextBlock Text="{Binding Name}"
										ToolTip="{Binding Name}"
										VerticalAlignment="Center"/>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=HasItems,
                               RelativeSource={RelativeSource 
                               AncestorType={x:Type TreeViewItem}}}" 
                     Value="False">
                                <Setter TargetName="Expander"
                  Property="Visibility"
                  Value="Collapsed"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Width="60" 
                            DisplayMemberBinding="{Binding PointCount, StringFormat=(\{0\}项)}"/>
            <GridViewColumn Width="40">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <Button Click="Button_Click_RemoveNode" 
                                    VerticalAlignment="Center">
                            <Image Width="16" 
                                       Source="/Mesurement.UiLayer.WPF;component/images/delete.png" />
                        </Button>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
        </GridViewColumnCollection>
        <Style  x:Key="TreeViewStyleSchemaConfig"
            TargetType="TreeView">
            <Style.Resources>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Padding" Value="0,2"/>
                    <Setter Property="IsExpanded" Value="True"/>
                    <Setter Property="Foreground"
                        Value="{DynamicResource 字体颜色标准}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <StackPanel VerticalAlignment="Center">
                                    <Border Name="Bd"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}">
                                        <GridViewRowPresenter x:Name="PART_Header" 
                                      Content="{TemplateBinding Header}" 
                                      Columns="{StaticResource ColumnsSchemaConfig}" >
                                            <GridViewRowPresenter.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                </Style>
                                            </GridViewRowPresenter.Resources>
                                        </GridViewRowPresenter>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" />
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded"
                       Value="false">
                                        <Setter TargetName="ItemsHost"
                        Property="Visibility"
                        Value="Collapsed"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader"
                             Value="false"/>
                                            <Condition Property="Width"
                             Value="Auto"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header"
                        Property="MinWidth"
                        Value="75"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader"
                             Value="false"/>
                                            <Condition Property="Height"
                             Value="Auto"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header"
                        Property="MinHeight"
                        Value="19"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsSelected"
                       Value="true">
                                        <Setter Property="Foreground"
                        Value="Blue"/>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource 窗口背景深色}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected"
                             Value="true"/>
                                            <Condition Property="IsSelectionActive"
                             Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource 
                          {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground"
                        Value="{DynamicResource 
                          {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled"
                       Value="false">
                                        <Setter Property="Foreground"
                        Value="{DynamicResource 
                          {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" 
                Value="{DynamicResource 表行颜色}"/>
                    <Style.Triggers>
                        <Trigger Property="AlternationIndex" Value="1">
                            <Setter Property="Background"
                        Value="{DynamicResource 表行颜色1}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource 线性渐变颜色}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource 窗口背景色}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <ScrollViewer>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                  Background="White"
                    BorderThickness="{TemplateBinding BorderThickness}">
                                <DockPanel>
                                    <GridViewHeaderRowPresenter 
                                    Columns="{StaticResource ColumnsSchemaConfig}"
                                                            DockPanel.Dock="Top"/>
                                    <ItemsPresenter/>
                                </DockPanel>
                            </Border>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="Background" 
                    Value="{DynamicResource 窗口背景色}"/>
        </Style>
    </basemodel:DockControlDisposable.Resources>
    <Grid DataContext="{StaticResource SchemaViewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="350"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TreeView Name="treeFramework"
                      Button.Click="ButtonClick_AddNode"
                          Margin="5"
                  BorderBrush="{x:Null}" 
                      Style="{DynamicResource DataGridTreeSchemaConfig}">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children, Mode=TwoWay}"/>
                </TreeView.ItemTemplate>
            </TreeView>
            <Grid Grid.Row="1"
                            Button.Click="Click_SchemaOperation">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Name="buttonNew"
                        Margin="3" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="24"
                        Width="120"
                        Content="{DynamicResource 新建方案}"
                        Style="{DynamicResource ButtonStyleBorder}"/>
                <Button Grid.Column="1"
                        Style="{DynamicResource ButtonStyleBorder}"
                            Name="buttonCopy"
                        Margin="3" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="24"
                        Width="120"
                        Content="{DynamicResource 复制方案}"/>
                    <Button 
                            Name="buttonRename"
                        Style="{DynamicResource ButtonStyleBorder}"
                        Grid.Row="1"
                        Margin="3" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="24"
                        Width="120"
                        Content="{DynamicResource 重命名方案}"/>
                    <Button Grid.Row="1"
                            Grid.Column="1"
                            Name="buttonDelete"
                        Style="{DynamicResource ButtonStyleBorder}"
                        Margin="3" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="24"
                        Width="120"
                        Content="{DynamicResource 删除方案}"/>
            </Grid>
        </Grid>
        <GridSplitter HorizontalAlignment="Right"
                      Width="3"
                      Grid.RowSpan="2"
                      VerticalAlignment="Stretch" 
                      Background="{DynamicResource 分隔条颜色}" 
                      Margin="0,10,0,10"/>
        <Grid Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="1.8*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
                <Grid  Name="gridSchemas">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{DynamicResource 方案名}"
                               VerticalAlignment="Center" Margin="3"/>
                    <ComboBox Margin="3"
                          Grid.Column="1"
                          Name="comboBoxSchemas"
                          ItemsSource="{Binding Schemas}"
                          Style="{DynamicResource StyleComboBox}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding SCHEMA_NAME}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                <Button Grid.Column="3"
                        Style="{DynamicResource ButtonStyleBorder}"
                        Click="buttonClick_Save"
                        Margin="3" VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="24"
                        Width="120"
                        Content="{DynamicResource 保存方案}"/>
                <!--<Button Grid.Column="2"
                        Style="{DynamicResource ButtonStyleBorder}"
                        Click="buttonClick_SortDefault"
                        Margin="3" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="24"
                        Width="120"
                        Content="{DynamicResource 恢复默认排序}"/>-->
                </Grid>
            <GridSplitter VerticalAlignment="Top"
                      Grid.Row="2"
                      Height="3"
                      HorizontalAlignment="Stretch" 
                      Background="{DynamicResource 分隔条颜色}" 
                      Margin="0"/>
            <LocalControls:TreeViewDragDrop Margin="3"
                                            x:Name="treeSchema"
                      Grid.Row="1"
                                            Style="{StaticResource TreeViewStyleSchemaConfig}"
                                            Drop="Event_NodeMove"
                  SelectedItemChanged="treeSchema_SelectedItemChanged"
                  ItemsSource="{Binding Children}"
                  BorderBrush="{x:Null}">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}"/>
                </TreeView.ItemTemplate>
            </LocalControls:TreeViewDragDrop>
            <Grid Grid.Row="2" Name="gridGeneral">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Margin="3,3,6,3" 
                            HorizontalAlignment="Left"
                            Click="Button_Click_AddItem">
                    <Image Width="18"
                               Source="/Mesurement.UiLayer.WPF;component/images/add.png"/>
                </Button>
                <local:DataGridParaValue Grid.Row="1"
                                         HeadersVisibility="Column"
                        AutoGenerateColumns="False"
                        x:Name="dataGridGeneral"
                        BorderThickness="0,1,0,0"
                                          IsReadOnly="False"
                                         CellEditEnding="dataGridGeneral_CellEditEnding"
                                         
                             ItemsSource="{Binding ParaValuesView, Mode=TwoWay}"
                            Background="{x:Null}" SelectionMode="Single" 
                                          Style="{StaticResource dataGridStyleGeneral}">
                    <local:DataGridParaValue.Columns>
                        <DataGridTemplateColumn Header="{DynamicResource 删除}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Width="16"
                                                Click="Button_Click_RemoveItem"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center">
                                        <Image Source="/Mesurement.UiLayer.WPF;component/images/delete.png"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{DynamicResource 上移}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Width="16"
                                                Click="Button_Click_ItemUp"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center">
                                        <Image Source="/Mesurement.UiLayer.WPF;component/images/up.ico"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{DynamicResource 下移}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Width="16"
                                                Click="Button_Click_ItemDown"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center">
                                        <Image Source="/Mesurement.UiLayer.WPF;component/images/up.ico"
                                                   RenderTransformOrigin="0.5,0.5">
                                            <Image.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                    <SkewTransform AngleY="0" AngleX="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Image.RenderTransform>
                                        </Image>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </local:DataGridParaValue.Columns>
                </local:DataGridParaValue>
            </Grid>
            <ScrollViewer Grid.Row="2"
                          Name="scrollViewError"
                                        Margin="3,3,6,3"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto"
                                        Visibility="Collapsed">
                <Error:ControlTreeError Grid.Row="2"
                                        x:Name="controlError"/>
            </ScrollViewer>
            <CheckBox IsChecked="True"
                      Visibility="Collapsed"
                      Grid.Row="2"
                      Margin="60,6,3,3"
                      HorizontalAlignment="Left" VerticalAlignment="Top"
                      Name="checkBoxErrorView"
                      Content="{DynamicResource 快速添加误差点}"/>
        </Grid>
    </Grid>
</basemodel:DockControlDisposable>
